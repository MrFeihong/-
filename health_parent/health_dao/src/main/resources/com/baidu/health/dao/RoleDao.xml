<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baidu.health.dao.RoleDao" >

    <!--根据用户Id查询角色-->
    <select id="findByUserId" parameterType="int" resultType="Role">
        select r.* from t_role r,t_user_role ur where r.id = ur.role_id and ur.user_id = #{user_id}
    </select>

    <!--条件查询，分页查询-->
    <select id="findByCondition" resultType="Role" parameterType="String">
        select * from t_role
        <if test="value != null and value.length > 0">
            where id = #{value} or name like #{value}
        </if>
    </select>

    <!--查询所有角色-->
    <select id="findAll" resultType="Role">
        select * from t_role
    </select>

    <!--新增角色-->
    <insert id="add" parameterType="Role">
        <selectKey resultType="Integer" keyProperty="id" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
        insert into t_role (name, keyword, description)
        values (#{name},#{keyword},#{description})
    </insert>

    <!--根据角色Id查询角色基础信息-->
    <select id="findById" parameterType="Integer" resultType="Role">
        select * from t_role where id = #{id}
    </select>

    <!--根据角色Id查询角色的菜单Id-->
    <select id="findMenuIdsByRoleId" parameterType="Integer" resultType="Integer">
        select menu_id from t_role_menu where role_id = #{roleId}
    </select>

    <!--根据角色Id查询角色的权限Id-->
    <select id="findPermissionIdsByRoleId" parameterType="Integer" resultType="Integer">
        select permission_id from t_role_permission where role_id = #{roleId}
    </select>

    <!--根据id修改角色基础信息-->
    <update id="edit" parameterType="Role">
        update t_role
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="keyword != null">
                keyword = #{keyword},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--根据Id删除角色-->
    <delete id="deleteById" parameterType="Integer">
        delete from t_role where id = #{roleId}
    </delete>

    <!--删除角色和菜单关系表数据-->
    <delete id="deleteRoleAndMenuRelation" parameterType="Integer">
        delete from t_role_menu where role_id = #{roleId}
    </delete>

    <!--删除角色和权限关系表数据-->
    <delete id="deleteRoleAndPermissionRelation" parameterType="Integer">
        delete from t_role_permission where role_id = #{roleId}
    </delete>

    <!--设置角色和菜单的关联关系-->
    <insert id="setRoleAndMenu" parameterType="Map">
        insert into t_role_menu (role_id, menu_id) values (#{roleId}, #{menuId})
    </insert>

    <!--设置角色和权限的关联关系-->
    <insert id="setRoleAndPermission" parameterType="Map">
        insert into t_role_permission values (#{roleId}, #{permissionId})
    </insert>

</mapper>